#include <stdio.h> 
#include <unistd.h> 
#include <stdlib.h> 
#include <string.h> 
int global = 10; 
int main() 
{ 
    int local = 20; 
    pid_t pid; 
    printf("before fork\n"); 
    printf("pid=%d,global=%d,local=%d\n", 
    getpid(), global, local); 
    pid = fork(); 
    if (pid < 0) 
        printf("failed to create child"); 
    else if (pid == 0) 
    { 
        printf("after fork\n"); 
        global++; 
        local++; 
        printf("child:pid=%d,global=%d,
         local=%d\n", getpid(), global, local); 
    } 
    else if (pid > 0) 
        sleep(2); 
    printf("parent:pid=%d,global=%d, 
    local=%d\n", getpid(), global, local); 
    exit(0); 
}

output: 
before fork
pid=1235,global=10,local=20
after fork
child:pid=1236,global=11,local=21
parent:pid=1235,global=10,local=20
